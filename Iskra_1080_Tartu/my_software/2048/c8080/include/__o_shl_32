; Input: de:hl - value 1, stack - 32 bit value 2
; Output: de:hl - result

__o_shl_32:
    ld bc, hl ; bc = v1l
    pop hl ; hl = ret, stack = v2l
    ex (sp), hl ; hl = v2l, stack = ret
    ld a, l
    and 31
    jp z, __o_shl_32_ret
__o_shl_32_1:
    ex hl, de ; de <<= 1
    add hl, hl
    ex hl, de
    ld hl, bc ; bc <<= 1
    add hl, hl
    ld bc, hl
    jp nz, __o_shl_32_2 ; if (flag_c) de++;
    inc de
__o_shl_32_2:
    dec a
    jp nz, __o_shl_32_1
__o_shl_32_ret:
    pop hl ; hl = ret, stack = v2ha
    ex (sp), hl ; hl = v2h, stack = ret
    ld hl, bc
    jp hl
